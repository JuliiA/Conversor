/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package conversor;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import static java.time.Clock.system;
import java.util.ArrayList;
import javax.swing.JOptionPane;


/**
 *
 * @author laboratorios
 */
public class ConversorGenerico extends javax.swing.JFrame {
    private boolean convertirAValor2;
    private Conversor conversorSeleccionado;
    ArrayList<Conversor> conversores;

    /**
     * Creates new form Conversor
     */
    public ConversorGenerico() {
        initComponents();
        setTitle("Conversor");
        setLocationRelativeTo(null);
        
        //Llenar combo
        conversores = new ArrayList<Conversor>();
        conversores.add(new CentimetrosPulgadas());
        conversores.add(new MetrosKM());
        conversores.add(new KiloLibra());
        
        for (Conversor conversor : conversores){
            jComboBoxConversion.addItem(conversor.toString());
            
        }
        conversorSeleccionado = conversores.get(0);
        setLabels();
                
    }

    private void setLabels() {
        jLabelValor1.setText(conversorSeleccionado.getLabelValor1());
        jLabelValor2.setText(conversorSeleccionado.getLabelValor2());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldValor1 = new javax.swing.JTextField();
        jTextFieldValor2 = new javax.swing.JTextField();
        jLabelValor2 = new javax.swing.JLabel();
        jLabelValor1 = new javax.swing.JLabel();
        jButtonPulgadas = new javax.swing.JButton();
        jComboBoxConversion = new javax.swing.JComboBox();
        jLabelConversion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldValor1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValor1FocusLost(evt);
            }
        });
        jTextFieldValor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValor1ActionPerformed(evt);
            }
        });
        jTextFieldValor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldValor1KeyPressed(evt);
            }
        });

        jTextFieldValor2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldValor2FocusLost(evt);
            }
        });
        jTextFieldValor2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldValor2KeyPressed(evt);
            }
        });

        jLabelValor2.setText("Centimetros");

        jLabelValor1.setText("Pulgadas");

        jButtonPulgadas.setText("Convertir");
        jButtonPulgadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPulgadasActionPerformed(evt);
            }
        });

        jComboBoxConversion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxConversionItemStateChanged(evt);
            }
        });
        jComboBoxConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxConversionActionPerformed(evt);
            }
        });
        jComboBoxConversion.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxConversionPropertyChange(evt);
            }
        });

        jLabelConversion.setText("Seleccione conversion:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelValor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelValor2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldValor2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonPulgadas, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldValor1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxConversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelConversion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelValor1)
                    .addComponent(jTextFieldValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelValor2)
                    .addComponent(jButtonPulgadas))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldValor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValor1ActionPerformed

    //private static final double UNA_PULGADA = 2.54;
    
    private void jButtonPulgadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPulgadasActionPerformed
        if(convertirAValor2){
            convertirValor1();
        }
        else{
            convertirValor2();   
        }
        
    }//GEN-LAST:event_jButtonPulgadasActionPerformed

    private void convertirValor1(){
        String conversionString = "";
        Double conversionDouble=null;
        Double valor2Double=null;
        
        try {
            if(convertirAValor2){
                conversionString=jTextFieldValor1.getText();
                if(conversionString.contains("D")||conversionString.contains("F")){
                    throw new NumberFormatException("");
                }
            }
            else{
                conversionString=jTextFieldValor2.getText();
            }
            conversionDouble = Double.valueOf(conversionString.replace(",", ".").trim());
            valor2Double = conversorSeleccionado.convertirValor1Valor2(conversionDouble);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "No se ha podido convertir: " + conversionDouble, "ERROR", JOptionPane.ERROR_MESSAGE);
            jTextFieldValor1.setText("");
            jTextFieldValor1.requestFocus();
            return;
        }
        
        if(convertirAValor2){
            jTextFieldValor2.setText(String.format("%.2f",valor2Double));
            //jTextFieldCentimetros.setText("");
            //jTextFieldCentimetros.requestFocus();
        }
        else{
            jTextFieldValor1.setText(String.format("%.2f",valor2Double));
            //jTextFieldPulgadas.setText("");
            //jTextFieldPulgadas.requestFocus();
        }   
    }
    
    private void convertirValor2(){
        String conversionString = "";
        Double conversionDouble=null;
        Double valor1Double=null;
        
        try {
            if(!convertirAValor2){
                conversionString=jTextFieldValor2.getText();
                if(conversionString.contains("D")||conversionString.contains("F")){
                    throw new NumberFormatException("");
                }
            }
            else{
                conversionString=jTextFieldValor1.getText();
            }
            conversionDouble = Double.valueOf(conversionString.replace(",", ".").trim());
            valor1Double = conversorSeleccionado.convertirValor2Valor1(conversionDouble);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "No se ha podido convertir: " + conversionDouble, "ERROR", JOptionPane.ERROR_MESSAGE);
            jTextFieldValor2.setText("");
            jTextFieldValor2.requestFocus();
            return;
        }
        
        if(convertirAValor2){
            jTextFieldValor2.setText(String.format("%.2f",valor1Double));
            //jTextFieldCentimetros.setText("");
            //jTextFieldCentimetros.requestFocus();
        }
        else{
            jTextFieldValor1.setText(String.format("%.2f",valor1Double));
            //jTextFieldPulgadas.setText("");
            //jTextFieldPulgadas.requestFocus();
        }   
    }


    private void jComboBoxConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxConversionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxConversionActionPerformed

    private void jTextFieldValor1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValor1FocusLost
        convertirAValor2 = true;
    }//GEN-LAST:event_jTextFieldValor1FocusLost

    private void jTextFieldValor2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldValor2FocusLost
        convertirAValor2 = false;
    }//GEN-LAST:event_jTextFieldValor2FocusLost

    private void jTextFieldValor1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValor1KeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            convertirValor1();
        }
    }//GEN-LAST:event_jTextFieldValor1KeyPressed

    private void jTextFieldValor2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValor2KeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            convertirValor1();
        }
    }//GEN-LAST:event_jTextFieldValor2KeyPressed

    private void jComboBoxConversionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxConversionPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxConversionPropertyChange

    private void jComboBoxConversionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxConversionItemStateChanged
        //obtengo el indice el seleccionado
        int selectedIndex = jComboBoxConversion.getSelectedIndex();
        
        conversorSeleccionado = conversores.get(selectedIndex);
        setLabels();
    }//GEN-LAST:event_jComboBoxConversionItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorGenerico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPulgadas;
    private javax.swing.JComboBox jComboBoxConversion;
    private javax.swing.JLabel jLabelConversion;
    private javax.swing.JLabel jLabelValor1;
    private javax.swing.JLabel jLabelValor2;
    private javax.swing.JTextField jTextFieldValor1;
    private javax.swing.JTextField jTextFieldValor2;
    // End of variables declaration//GEN-END:variables
}
